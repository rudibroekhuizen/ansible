---
- name: Manage postgres
  hosts: postgresql
  become: true
  become_user: postgres
  tasks:
    - name: Set config settings
      postgresql_set:
        name: "{{ item.name }}"
        value: "{{ item.value }}"
        register: "{{ item.register | default(omit) }}"
      with_items:
        - "{{ postgresql_set }}"
      when: postgresql_set is defined
      tags: postgresql_set

    - name: Create users
      postgresql_user:
        encrypted: true
        name: "{{ item.name }}"
        password: "{{ item.password }}"
        role_attr_flags: "{{ item.role_attr_flags }}"
        state: "{{ item.state | default('present') }}"
      with_items:
        - "{{ postgresql_user }}"
      when: postgresql_user is defined
      tags: postgresql_user

    - name: Create database
      postgresql_db:
        name: "{{ item.name }}"
        owner: "{{ item.owner | default(postgres) }}"
        state: "{{ item.state | default('present') }}"
      with_items: "{{ postgresql_db }}"
      when: postgresql_db is defined
      tags: postgresql_db

    - name: Adds extensions
      postgresql_ext:
        name: "{{ item.name }}"
        db: "{{ item.db }}"
      with_items: "{{ postgresql_ext }}"
      when: postgresql_ext is defined
      tags: postgresql_ext

    - name: Create schema
      postgresql_schema:
        name: "{{ item.name }}"
        db: "{{ item.db }}"
      with_items: "{{ postgresql_schema }}"
      when: postgresql_schema is defined
      tags: postgresql_schema

    - name: Set privileges
      postgresql_privs:
        db: "{{ item.db }}"
        state: "{{ item.state | default('present') }}"
        schema: "{{ item.schema | default(omit) }}"
        privs: "{{ item.privs }}"
        type: "{{ item.type }}"
        roles: "{{ item.roles }}"
        objs: "{{ item.objs }}"
      with_items: "{{ postgresql_privs }}"
      when: postgresql_privs is defined
      tags: postgresql_privs
      
    - name: Configure pg_hba
      postgresql_pg_hba:
        dest: "{{ item.dest }}"
        state: "{{ item.state | default('present') }}"
        contype: "{{ item.contype }}"
        users: "{{ item.users }}"
        source: "{{ item.source }}"
        databases: "{{ item.databases }}"
        method: "{{ item.method }}"
      with_items: "{{ postgresql_pg_hba }}"
      when: postgresql_pg_hba is defined
      tags: postgresql_pg_hba

    - name: Run queries
      postgresql_query:
        db: "{{ item.db }}"
        query: "{{ item.query }}"
      with_items: "{{ postgresql_query }}"
      when: postgresql_query is defined
      tags: postgresql_query
...
