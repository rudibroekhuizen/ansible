---
- name: Create slave
  hosts: postgresql_slave
  become: true
  tasks:
    - name: Set up replicator credentials
      blockinfile:
        path: "/etc/postgresql/.pgpass"
        owner: postgres
        mode: 0600
        create: yes
        block: |
          *:5432:*:{{ replication_user }}:{{ replication_password }}

#    - name: Set up replicator credentials
#      template:
#        src: ".pgpass.j2"
#        dest: "/etc/postgresql/.pgpass"
#        owner: postgres
#        mode: 0600

    - name: Check if receiver process is running
      shell: pgrep -a postgres | grep streaming
      register: ps_receiver
      changed_when: ps_receiver.rc != 2
      failed_when: ps_receiver.rc == 2
      tags:
        - replica

    - name: Setup replication | stop postgresql service
      systemd:
        name: postgresql
        state: stopped
      when: ps_receiver.stdout_lines|count == 0
      tags:
        - replica

    - name: Setup replication | cleanup postgresql dir
      file:
        path: "{{ postgresql_data_directory }}"
        state: absent
      when: ps_receiver.stdout_lines|count == 0
      tags:
        - replica

    - name: Setup replication | create postgresql dir
      file:
        path: "{{ postgresql_data_directory }}"
        state: directory
        owner: postgres
        group: postgres
        mode: 0700
      when: ps_receiver.stdout_lines|count == 0
      tags:
        - replica

    - name: Setup replication | start replica
      shell: >
        PGPASSFILE=/etc/postgresql/.pgpass pg_basebackup \
          --host=192.168.56.6 \
          --username=replicator \
          --write-recovery-conf \
          --pgdata={{ postgresql_data_directory }}
      become_user: postgres
      when: ps_receiver.stdout_lines|count == 0
      tags:
        - replica

    - name: Setup replication | start postgresql service
      systemd:
        name: postgresql
        state: started
      when: ps_receiver.stdout_lines|count == 0
      tags:
        - replica

    - name: Check if receiver process is running
      shell: pgrep -a postgres | grep streaming
      ignore_errors: yes
      register: ps_receiver_standby
      until: ps_receiver_standby.stdout.find("streaming") != -1
      retries: 10
      delay: 5
      tags:
        - replica
...
